<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <import resource="applicationContext.xml"></import>

<!--    配置组件扫描-->
    <context:component-scan base-package="com.haocai.module.*">
        <!-- 只扫描controller层 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--    <mvc:default-servlet-handler/>-->

<!--     排除静态资源-->
    <mvc:resources mapping="/css/**" location="WEB-INF/layui/css/"/>
    <mvc:resources mapping="/js/**" location="WEB-INF/layui/js/"/>
    <mvc:resources mapping="/fonts/**" location="WEB-INF/layui/fonts/"/>
    <mvc:resources mapping="/images/**" location="WEB-INF/layui/images/"/>
    <mvc:resources mapping="/lib/**" location="WEB-INF/layui/lib/"/>
    <mvc:resources mapping="/api/**" location="WEB-INF/layui/api/"/>

    <!-- spring-mvc jsp视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
        <property name="order" value="1"></property>
    </bean>

    <!-- 设置freeMarker的配置文件路径 -->
    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties" />
    </bean>
    <!-- html视图解析器 必须先配置freemarkerConfig,注意html是没有prefix前缀属性的 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="freemarkerSettings" ref="freemarkerConfiguration" />
        <property name="templateLoaderPath">
            <value>/</value>
        </property>
    </bean>
    <bean id="htmlviewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="prefix" value="WEB-INF/layui/"/>
        <property name="suffix" value=".html" />
        <property name="order" value="0"></property>
        <property name="contentType" value="text/html;charset=UTF-8"></property>
    </bean>
<!--解决编码问题-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
    <bean class="com.haocai.filter.LoginFilter" id="loginFilter"></bean>
<!--    &lt;!&ndash;    拦截器&ndash;&gt;-->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash;                    拦截的&ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash;                    要排除拦截的&ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/css/**"/>-->
<!--            <mvc:exclude-mapping path="/js/**"/>-->
<!--            <mvc:exclude-mapping path="/fonts/**"/>-->
<!--            <mvc:exclude-mapping path="/images/**"/>-->
<!--            <mvc:exclude-mapping path="/lib/**"/>-->
<!--            <mvc:exclude-mapping path="/api/**"/>-->
<!--            <mvc:exclude-mapping path="/user/login"/>-->
<!--            <mvc:exclude-mapping path="/getCode"/>-->
<!--            <mvc:exclude-mapping path="/page/error404"/>-->
<!--            &lt;!&ndash;                    绑定拦截器&ndash;&gt;-->
<!--            <ref bean="loginFilter"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
</beans>